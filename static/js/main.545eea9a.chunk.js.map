{"version":3,"sources":["components/Header.js","components/HeaderBanner.js","components/BoardList.js","components/BoardView.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","newProps","newState","this","props","data","console","log","menuCloseStyle","padding","background","id","className","href","target","style","float","Component","HeaderBanner","onClick","e","preventDefault","onChangePage","bind","title","sub","BoardList","param","lists","i","length","push","key","code","name","data-code","dataset","addr","renderCssSwitch","remain_stat","renderSwitch","stock_at","created_at","lat","lng","action","type","placeholder","value","summary","scope","BoardView","split","map","line","Footer","App","max_board_id","state","mode","selected_boardView_id","headerBanner","boardList","boardList_storeInfos","fetch","then","response","text","responseText","jsonResult","JSON","parse","stores","setState","catch","error","_article","_content","getBoardViewContent","clear","getBoardView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.545eea9a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nclass Header extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('Header.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 Header.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    const menuCloseStyle = {padding: '0 10px 0 50px', background: 'none'};\r\n    return (\r\n      <header id=\"header\">\r\n        <div className=\"header_area box_inner clear\">\r\n          <h1><a href=\"/\">리액트 IN 자바스크립트</a></h1>\r\n          <p className=\"openMOgnb\">\r\n            <a href=\"#LINK\">\r\n              <b className=\"hdd\">메뉴열기</b> <span /><span /><span />\r\n            </a>\r\n          </p>\r\n          {/* <!-- header_cont --> */}\r\n          <div className=\"header_cont\">\r\n            <ul className=\"util clear\">\r\n              <li><a href=\"#LINK\">로그인</a></li>\r\n              <li><a href=\"#LINK\">회원가입</a></li>\r\n            </ul>\r\n            <nav>\r\n              <ul className=\"gnb clear\">\r\n                <li>\r\n                  <a href=\"#LINK\" className=\"openAll1 openAll\">\r\n                    리액트정보\r\n                  </a>\r\n\r\n                  <div className=\"gnb_depth gnb_depth2_1\">\r\n                    <ul className=\"submenu_list\">\r\n                      <li>\r\n                        <a\r\n                          href=\"https://github.com/miniplugin/miniplugin.github.io\"\r\n                          target=\"_new\"\r\n                        >\r\n                          국내\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a\r\n                          href=\"https://github.com/miniplugin/miniplugin.github.io\"\r\n                          target=\"_new\"\r\n                        >\r\n                          해외\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                    <p className=\"closeSubmenu\" style={{float: 'right'}}>\r\n                      <a href=\"#LINK\" style={menuCloseStyle}>\r\n                        닫기\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#LINK\" className=\"openAll2 openAll\">고객센터</a>\r\n                  <div className=\"gnb_depth gnb_depth2_2\">\r\n                    <ul className=\"submenu_list\">\r\n                      <li><a href=\"#LINK\">한줄게시판</a></li>\r\n                      <li><a href=\"#LINK\">문의하기</a></li>\r\n                    </ul>\r\n                    <p className=\"closeSubmenu\" style={{float: 'right'}}>\r\n                      <a href=\"#LINK\" style={menuCloseStyle}>\r\n                        닫기\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <p className=\"closePop\"><a href=\"#LINK\">닫기</a></p>\r\n          </div>\r\n          {/* <!-- //header_cont --> */}\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nclass HeaderBanner extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('HeaderBanner.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 HeaderBanner.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    return (\r\n      <div className=\"location_area customer\">\r\n        <div className=\"box_inner\">\r\n          <h2 className=\"tit_page\">\r\n            <a\r\n              href=\"/\"\r\n              onClick={function (e) {\r\n                e.preventDefault ();\r\n                this.props.onChangePage ();\r\n              }.bind (this)}\r\n            >\r\n              {this.props.title}\r\n            </a>\r\n          </h2>\r\n          <p className=\"location\">\r\n            고객센터 <span className=\"path\">/</span> {this.props.sub}\r\n          </p>\r\n          <ul className=\"page_menu clear\">\r\n            <li>\r\n              <a\r\n                href=\"/\"\r\n                onClick={function (e) {\r\n                  e.preventDefault ();\r\n                  this.props.onChangePage ();\r\n                }.bind (this)}\r\n              >\r\n                {this.props.title}\r\n              </a>\r\n            </li>\r\n            <li>{this.props.sub}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HeaderBanner;\r\n","import React, {Component} from 'react';\r\nclass BoardList extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('BoardList.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  renderSwitch (param) {\r\n    switch (param) {\r\n      case 'plenty':\r\n        return '100개이상';\r\n      case 'some':\r\n        return '30개 이상 100개미만';\r\n      case 'few':\r\n        return '2개 이상 30개 미만';\r\n      case 'empty':\r\n        return '1개 이하';\r\n      case 'break':\r\n        return '판매중지';\r\n      default:\r\n        return '정보없음';\r\n    }\r\n  }\r\n  renderCssSwitch (param) {\r\n    switch (param) {\r\n      case 'plenty':\r\n        return 'plenty';\r\n      case 'some':\r\n        return 'some';\r\n      case 'few':\r\n        return 'few';\r\n      case 'empty':\r\n        return 'empty';\r\n      case 'break':\r\n        return 'break';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 BoardList.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    //출력 데이터 처리\r\n    var lists = [];\r\n    var data = this.props.data;\r\n    var i = 0;\r\n    while (i < data.length) {\r\n      lists.push (\r\n        //반복구문 key값-고유값 처리\r\n        <tr key={data[i].code}>\r\n          <td>{data[i].name} </td>\r\n          <td className=\"tit_notice\">\r\n            <a\r\n              href={'/board/' + data[i].code}\r\n              data-code={data[i].code} //이 부분을 사용하지 않는다면, 아래 //주석부분처럼 값을 변경해야 합니다.\r\n              onClick={function (e) {\r\n                //(id,e)\r\n                //debugger;//크롬 디버거연동\r\n                e.preventDefault ();\r\n                this.props.onChangePage (e.target.dataset.code);\r\n              }.bind (this)} //(this, data[i].code)\r\n            >\r\n              {data[i].addr}\r\n            </a>\r\n          </td>\r\n          <td className={this.renderCssSwitch (data[i].remain_stat)}>\r\n            {this.renderSwitch (data[i].remain_stat)}\r\n          </td>\r\n          <td>{data[i].stock_at} </td>\r\n          <td>{data[i].created_at} </td>\r\n          <td>{data[i].lat}, {data[i].lng}</td>\r\n        </tr>\r\n      );\r\n      i = i + 1;\r\n    }\r\n    return (\r\n      <div>\r\n        <form action=\"#LINK\" className=\"minisrch_form\">\r\n          <fieldset>\r\n            <legend>검색</legend>\r\n            <input\r\n              type=\"text\"\r\n              className=\"tbox\"\r\n              title=\"검색어를 입력해주세요\"\r\n              placeholder=\"검색어를 입력해주세요\"\r\n              value=\"충청남도 천안시 신부동\"\r\n            />\r\n            <a href=\"#LINK\" className=\"btn_srch\">검색</a>\r\n          </fieldset>\r\n        </form>\r\n        {/* <!-- BoardList --> */}\r\n        <table className=\"bbsListTbl\" summary=\"번호,주소,코드,위도,경도,약국명,타입 등을 제공하는 표\">\r\n          <caption className=\"hdd\">\r\n            공지사항 목록\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">판매처명</th>\r\n              <th scope=\"col\">주소</th>\r\n              <th scope=\"col\">재고상태</th>\r\n              <th scope=\"col\">입고시간</th>\r\n              <th scope=\"col\">생성일자</th>\r\n              <th scope=\"col\">위도,경도</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lists}\r\n          </tbody>\r\n        </table>\r\n        {/* <!-- //BoardList --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BoardList;\r\n","import React, {Component} from 'react';\r\nclass BoardView extends Component {\r\n  render () {\r\n    console.log ('render()안에서 this는 BoardView.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    var i = 0;\r\n    return (\r\n      <div>\r\n        {/* <!-- BoardView --> */}\r\n        <ul className=\"bbsview_list\">\r\n          <li className=\"bbs_title\">{this.props.name}</li>\r\n          <li className=\"bbs_content\">\r\n            <div className=\"editer_content\">\r\n              {/* this.props.desc.replace (/\\n/g, '<br/>') */}\r\n              {this.props.addr.split ('\\n').map (line => {\r\n                return <span key={i++}>{line}<br /></span>;\r\n              })}\r\n            </div>\r\n          </li>\r\n          <li className=\"bbs_title\">코드:{this.props.code}</li>\r\n          <li className=\"bbs_title\">위도:{this.props.lat}</li>\r\n          <li className=\"bbs_title\">경도:{this.props.lng}</li>\r\n          <li className=\"bbs_title\">타입:{this.props.type}</li>\r\n          <li className=\"bbs_title\">입고시간:{this.props.stock_at}</li>\r\n          <li className=\"bbs_title\">재고상태:{this.props.remain_stat}</li>\r\n          <li className=\"bbs_title\">데이터생성일자:{this.props.created_at}</li>\r\n        </ul>\r\n        {/* <!-- //BoardView --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BoardView;\r\n","import React, {Component} from 'react';\r\nclass Footer extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('Footer.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 Footer.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    return (\r\n      <footer>\r\n        <div className=\"foot_area box_inner\">\r\n          <ul className=\"foot_list clear\">\r\n            <li><a href=\"#LINK\">이용약관</a></li>\r\n            <li><a href=\"#LINK\">개인정보취급방침</a></li>\r\n          </ul>\r\n          <h2>리액트</h2>\r\n          <p className=\"addr\">\r\n            리액트 IN 자바스크립트 <span className=\"gubun\">/</span>\r\n            <span className=\"br_line\">\r\n              대표전화 <span className=\"space0\">02-1234-5678</span>\r\n              <span className=\"gubun\">/</span>\r\n              <span className=\"br_line\">\r\n                E-mail :<span className=\"space0\"> kimilguk@knou.ac.kr</span>\r\n              </span>\r\n            </span>\r\n          </p>\r\n          <p className=\"copy box_inner\">\r\n            Copyright(c) 리액트 IN 자바스크립트 all right reserved\r\n          </p>\r\n          <ul className=\"snslink clear\">\r\n            <li><a href=\"#LINK\">blog</a></li>\r\n            <li><a href=\"#LINK\">facebook</a></li>\r\n            <li><a href=\"#LINK\">instargram</a></li>\r\n          </ul>\r\n        </div>\r\n\r\n        <h2 className=\"hdd\">빠른 링크 : 전화 문의,카카오톡,오시는 길,꼭대기로</h2>\r\n        <div className=\"quick_area\">\r\n          <ul className=\"quick_list\">\r\n            <li>\r\n              <a href=\"#LINK\">\r\n                <h3>전화 문의</h3>\r\n                <p>010-1234-5678</p>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#LINK\">\r\n                <h3>카카오톡 <em>상담</em></h3>\r\n                <p>1:1상담</p>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#LINK\"><h3 className=\"to_contact\">오시는 길</h3></a>\r\n            </li>\r\n          </ul>\r\n          <p className=\"to_top\">\r\n            <a href=\"#layout0\" className=\"s_point\">TOP</a>\r\n          </p>\r\n        </div>\r\n\r\n      </footer>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","/* App.js */\nimport React, {Component} from 'react';\nimport Header from './components/Header';\nimport HeaderBanner from './components/HeaderBanner';\nimport BoardList from './components/BoardList';\nimport BoardView from './components/BoardView';\nimport Footer from './components/Footer';\nimport './App.css';\n//헤더 컴포넌트를 만드는 코드(src/components/HeaderBanner.js)\n\n//리스트제목 컴포넌트를 만드는 코드(src/components/BoardList.js)\n\n//리스트뷰 컴포넌트를 만드는 코드(src/components/BoardView.js)\n\n//메인 컴포넌트를 만드는 코드(아래)\nclass App extends Component {\n  //콤포넌트 생성자 : 콤포넌트 실행시 자동 실행(초기화)\n  constructor (props) {\n    //props(속성) 과 state(자료) 관계\n    super (props); //부모클래스-Component의 props속성을 사용하겠다고 선언, 이후 부터 this 키워드 사용가능\n    this.max_board_id = 2; //전역변수 BoardList의 최근 입력 Key값 초기화\n\n    //부모클래스 props속성의 state값 초기화\n    this.state = {\n      mode: 'list', //변수에 초기값 지정\n      selected_boardView_id: null, //선택한 게시물 번호 강제로 초기화 할때,\n      headerBanner: {title: '리액트 IN 자바스크립트', sub: '공적마스크 판매처 및 재고 현황 조회'}, //json 1차원 데이터 객체\n      //배열 2차원 데이터(아래)\n      boardList: [],\n      /* boardList: [\n        {\n          addr: '충청남도 홍성군 갈산면 상촌로 12-1 (두류동)',\n          code: '1',\n          lat: 36.6029863,\n          lng: 126.5489114,\n          name: '신신약국',\n          type: '01',//판매처 유형[약국: '01', 우체국: '02', 농협: '03']\n          stock_at: '입고시간',\n          remain_stat: '재고 상태',\n          created_at: '데이터 생성 일자',\n          //[100개 이상(녹색): 'plenty' / 30개 이상 100개미만(노랑색): 'some' / 2개 이상 30개 미만(빨강색): 'few' / 1개 이하(회색): 'empty' / 판매중지: 'break']\"\n        },\n      ], */\n    };\n  }\n\n  //초기 공공데이터 json(텍스트로변환된) 내용 받아오기\n  componentDidMount () {\n    var boardList_storeInfos = null; //\n    fetch (\n      'https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=36.818754&lng=127.153618'\n    )\n      .then (response => response.text ())\n      .then (responseText => {\n        /* API사용하지 않고, 직접 Json데이터 사용시 */\n        //console.log ('res', responseText);//json(텍스트로변환된) 내용 확인\n        let jsonResult = JSON.parse (responseText); //json 형태의 데이터를 파싱\n        //console.log ('jsonResult', jsonResult);//json 파싱 확인\n        //boardList_storeInfos = jsonResult.storeInfos; //storeInfos 속성도 array 형태로 받아주고,-판매점정보만\n        boardList_storeInfos = jsonResult.stores; //storeInfos 속성도 array 형태로 받아주고,-판매점및 재고까지\n        /* boardList_storeInfos = [\n          {\n            addr: '충청남도 홍성군 갈산면 상촌로 12-1 (두류동)',\n            code: '1',\n            lat: 36.6029863,\n            lng: 126.5489114,\n            name: '신신약국',\n            type: '01',\n            stock_at: '입고시간',\n            remain_stat: '재고 상태',\n            created_at: '데이터 생성 일자',\n          },\n        ]; */\n        //alert (boardList_storeInfos); //디버그\n        /* API사용시 아래 기술 참조\n          const match = responseText.match (/\\((.*)\\)/); // 정규식은 JSONP응답에 따라 달라질 수 있음. 이 경우 ( 응답 )이고 match는 ( ) 를 포함한 전체 응답과 () 내부의 데이터가 배열 형태로 출력됨\n          if (match == null) console.log ('Message', 'null');\n          console.log ('1', match[0].toString ());\n          console.log ('2', match[1].toString ());\n          let jsonResult = JSON.parse (match[1].toString ()); // ( ) 를 뗀 진짜 json 형태의 데이터를 파싱하고\n          let jusoArray = jsonResult.results.juso; // juso 속성도 array 형태이기 때문에 또 받아주고,\n          console.log ('result', jsonResult.results.juso.toString ());\n          console.log ('juso', JSON.stringify (jsonResult)); //이건 확인용\n          console.log ('real data', jusoArray[0].detBdNmList); // juso 배열의 첫번째 데이터의 detBdNmList 속성 값을 출력해주었다. */\n      })\n      .then (data => this.setState ({boardList: boardList_storeInfos}))\n      .catch (error => {\n        console.error (error);\n      });\n  }\n  getBoardViewContent () {\n    var i = 0;\n    while (i < this.state.boardList.length) {\n      var data = this.state.boardList[i];\n      if (data.code === this.state.selected_boardView_id) {\n        return data;\n        //break;\n      }\n      i = i + 1;\n    }\n  }\n  getBoardView () {\n    var _article = null, _content = null;\n    if (this.state.mode === 'list') {\n      _article = null;\n      //this.state.selected_boardView_id = 0;\n    } else if (this.state.mode === 'read') {\n      _content = this.getBoardViewContent ();\n      _article = (\n        <BoardView\n          name={_content.name}\n          addr={_content.addr}\n          code={_content.code}\n          lat={_content.lat}\n          lng={_content.lng}\n          type={_content.type}\n          stock_at={_content.stock_at}\n          remain_stat={_content.remain_stat}\n          created_at={_content.created_at}\n        />\n      );\n    }\n    return _article;\n  }\n  //props-state의 값이 바뀌면 html을 그리는 함수 render 자동으로 재 실행됨\n  render () {\n    console.clear ();\n    console.log ('render()안에서 this는 App.js콤포넌트 모듈 자신을 가리킨다.', this);\n\n    //constructor (props) 부모클래스의 초기화한 값을 아래 태그의 속성(props)에 this값으로 전달\n    return (\n      <div className=\"App\">\n        <Header />\n        <div id=\"container\">\n          <HeaderBanner\n            title={this.state.headerBanner.title}\n            sub={this.state.headerBanner.sub}\n            onChangePage={function () {\n              //alert ('HeaderBanner');//디버그\n              this.setState ({mode: 'list', selected_boardView_id: null});\n            }.bind (this)}\n          />\n          {/* <!-- bodytext_area --> */}\n          <div className=\"bodytext_area box_inner\">\n            <BoardList\n              onChangePage={function (code) {\n                //alert ('BoardList');//디버그\n                //debugger;크롬 디버거연동\n                this.setState ({\n                  mode: 'read',\n                  selected_boardView_id: code,\n                });\n              }.bind (this)}\n              data={this.state.boardList}\n            />\n            {this.getBoardView ()}\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* index.js */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (<App />, document.getElementById ('wrap'));\n\n// 앱이 오프라인에서 작동하고 더 빨리로드되도록하려면\n// 아래의 unregister()를 register()로 변경 합니다.\nserviceWorker.unregister ();\n"],"sourceRoot":""}