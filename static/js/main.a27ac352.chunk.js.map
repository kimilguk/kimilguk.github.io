{"version":3,"sources":["components/Header.js","components/HeaderBanner.js","components/SearchForm.js","components/Footer.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["Header","newProps","newState","this","props","data","console","log","menuCloseStyle","padding","background","id","className","href","target","style","float","Component","HeaderBanner","onClick","e","preventDefault","onChangePage","bind","title","sub","src","alt","SearchForm","state","searchWord","inputFormHandler","value","setState","action","method","onSubmit","type","placeholder","onChange","cursor","Footer","calDateRange","val1","val2","length","indexOf","start_dt","split","end_dt","Number","from_dt","Date","getTime","MapWithAMarker","compose","withScriptjs","withGoogleMap","lat","lng","markers","mapReflng","arraylatlng","mapReflat","defaultZoom","defaultCenter","center","ref","onMapLoad","onDragEnd","map","marker","icons","today","year","getFullYear","nows","getMonth","getDate","resultday","month","day","arraylatlng2","latlng","lat2","lng2","key","position","options","icon","selectedMarker","name","address","ShelterMap","handleMapDrag","handleMapLoad","handleClick","event","shelters","mapFetchUrl","fetchUrldata","mapSearchWord","mapRef","componentDidMount","fetch","then","response","text","responseText","regExp","RegExp","regExp2","regExp3","regExp5","regExp13","mapdata","replace","trim","jsondata","JSON","parse","results","i","push","catch","_mapComponent","getCenter","googleMapURL","loadingElement","height","containerElement","mapElement","App","fetchUrl","headerBanner","_searchWord","seearchWord","searchWorddata","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"mRAqFeA,E,oLAlFUC,EAAUC,GAC/B,OAAIC,KAAKC,MAAMC,OAASJ,EAASI,OAC/BC,QAAQC,IAAK,8GACN,K,+BAKTD,QAAQC,IAAK,oIAAgDJ,MAC7D,IAAMK,EAAiB,CAACC,QAAS,gBAAiBC,WAAY,QAC9D,OACE,4BAAQC,GAAG,UACT,yBAAKC,UAAU,+BACb,4BAAI,uBAAGC,KAAK,KAAR,+DACJ,uBAAGD,UAAU,aACX,uBAAGC,KAAK,SACN,uBAAGD,UAAU,OAAb,4BADF,IAC8B,+BAAQ,+BAAQ,iCAIhD,yBAAKA,UAAU,eACb,wBAAIA,UAAU,cACZ,4BAAI,uBAAGC,KAAK,SAAR,uBACJ,4BAAI,uBAAGA,KAAK,SAAR,8BAEN,6BACE,wBAAID,UAAU,aACZ,4BACE,uBAAGC,KAAK,QAAQD,UAAU,oBAA1B,kCAIA,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,gBACZ,4BACE,uBACEC,KAAK,qDACLC,OAAO,QAFT,iBAOF,4BACE,uBACED,KAAK,qDACLC,OAAO,QAFT,kBAQJ,uBAAGF,UAAU,eAAeG,MAAO,CAACC,MAAO,UACzC,uBAAGH,KAAK,QAAQE,MAAOP,GAAvB,mBAMN,4BACE,uBAAGK,KAAK,QAAQD,UAAU,oBAA1B,4BACA,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,gBACZ,4BAAI,uBAAGC,KAAK,SAAR,mCACJ,4BAAI,uBAAGA,KAAK,SAAR,8BAEN,uBAAGD,UAAU,eAAeG,MAAO,CAACC,MAAO,UACzC,uBAAGH,KAAK,QAAQE,MAAOP,GAAvB,qBAQV,uBAAGI,UAAU,YAAW,uBAAGC,KAAK,SAAR,wB,GA5EfI,aC2DNC,E,oLAzDUjB,EAAUC,GAC/B,OAAIC,KAAKC,MAAMC,OAASJ,EAASI,OAC/BC,QAAQC,IAAK,oHACN,K,+BAMT,OADAD,QAAQC,IAAK,0IAAsDJ,MAEjE,yBAAKS,UAAU,0BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,YACZ,uBACEC,KAAK,IACLM,QAAS,SAAUC,GACjBA,EAAEC,iBACFlB,KAAKC,MAAMkB,gBACXC,KAAMpB,OAEPA,KAAKC,MAAMoB,QAGhB,uBAAGZ,UAAU,YAAb,iLAEE,0BAAMA,UAAU,QAAhB,KAA+B,6BAAM,6BAFvC,KAGKT,KAAKC,MAAMqB,IAHhB,kIAIE,6BAAM,6BAJR,oGAIoC,6BAClC,yBAAKC,IAAI,kCAAkCC,IAAI,WALjD,0CAOE,yBAAKD,IAAI,qCAAqCC,IAAI,SAPpD,0CASE,yBAAKD,IAAI,oCAAoCC,IAAI,QATnD,2CAWE,yBAAKD,IAAI,mCAAmCC,IAAI,gBAXlD,iGAcA,wBAAIf,UAAU,mBAAd,oGACwB,6BAAM,6BAC5B,4BACE,yBAAKc,IAAI,kCAAkCC,IAAI,WADjD,wCAGE,yBAAKD,IAAI,qCAAqCC,IAAI,SAHpD,yCAMA,4BACE,yBAAKD,IAAI,oCAAoCC,IAAI,QADnD,wCAGE,yBAAKD,IAAI,mCAAmCC,IAAI,gBAHlD,wG,GA/CeV,a,iBCgDZW,E,kDA9Cb,WAAaxB,GAAQ,IAAD,8BAClB,cAAOA,IACFyB,MAAQ,CACXC,WAAY,EAAK1B,MAAM0B,YAEzB,EAAKC,iBAAmB,EAAKA,iBAAiBR,KAAtB,gBALN,E,6DAOFH,GAChBd,QAAQC,IAAKa,EAAEN,OAAOkB,OACtB7B,KAAK8B,SAAL,eAAiBb,EAAEN,OAAOH,GAAKS,EAAEN,OAAOkB,U,+BAIxC,OADA1B,QAAQC,IAAK,wIAAoDJ,MAE/D,0BACE+B,OAAO,kBACPtB,UAAU,gBACVuB,OAAO,OACPC,SAAU,SAAUhB,GAClBA,EAAEC,iBAEFlB,KAAKC,MAAMgC,SAAUhB,EAAEN,OAAOgB,WAAWE,QACzCT,KAAMpB,OAER,kCACE,gDACA,2BACEQ,GAAG,aACH0B,KAAK,SACLzB,UAAU,OACVY,MAAM,gEACNc,YAAY,mFACZN,MAAO7B,KAAK0B,MAAMC,WAClBS,SAAUpC,KAAK4B,mBAEjB,2BACEM,KAAK,SACLzB,UAAU,WACVoB,MAAM,eACNjB,MAAO,CAACyB,OAAQ,mB,GAzCHvB,aCmEVwB,E,oLAjEUxC,EAAUC,GAC/B,OAAIC,KAAKC,MAAMC,OAASJ,EAASI,OAC/BC,QAAQC,IAAK,8GACN,K,+BAMT,OADAD,QAAQC,IAAK,oIAAgDJ,MAE3D,gCACE,yBAAKS,UAAU,uBACb,wBAAIA,UAAU,mBACZ,4BAAI,uBAAGC,KAAK,SAAR,6BACJ,4BAAI,uBAAGA,KAAK,SAAR,sDAEN,kDACA,uBAAGD,UAAU,QAAb,8DACgB,0BAAMA,UAAU,SAAhB,KACd,0BAAMA,UAAU,WAAhB,4BACO,0BAAMA,UAAU,UAAhB,gBACL,0BAAMA,UAAU,SAAhB,KACA,0BAAMA,UAAU,WAAhB,WACU,0BAAMA,UAAU,UAAhB,2BAId,uBAAGA,UAAU,kBAAb,8FAGA,wBAAIA,UAAU,iBACZ,4BAAI,uBAAGC,KAAK,SAAR,SACJ,4BAAI,uBAAGA,KAAK,SAAR,aACJ,4BAAI,uBAAGA,KAAK,SAAR,iBAIR,wBAAID,UAAU,OAAd,qIACA,yBAAKA,UAAU,cAkBb,uBAAGA,UAAU,UACX,uBAAGC,KAAK,WAAWD,UAAU,WAA7B,c,GA3DSK,a,gBCgBrB,SAASyB,EAAcC,EAAMC,GAG3B,GAAID,EAAKE,OAAS,IAAMD,EAAKC,OAAS,GAAI,OAAO,KAEjD,GAAIF,EAAKG,QAJI,KAIe,GAAKF,EAAKE,QAJzB,KAI4C,EAAG,OAAO,KAEnE,IAAIC,EAAWJ,EAAKK,MANP,KAOTC,EAASL,EAAKI,MAPL,KAUbD,EAAS,GAAKG,OAAQH,EAAS,IAAM,EAAI,GACzCE,EAAO,GAAKC,OAAQD,EAAO,IAAM,EAAI,GAErC,IAAIE,EAAU,IAAIC,KAAML,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAE3D,OADY,IAAIK,KAAMH,EAAO,GAAIA,EAAO,GAAIA,EAAO,IACrCI,UAAaF,EAAQE,WAAc,IAAO,GAAK,GAAK,GAGpE,IAAMC,EAAiBC,kBAASC,eAAcC,gBAAvBF,EAAuC,SAAAnD,GAG5D,IAAIsD,EAAKC,EACT,GAA6B,IAAzBvD,EAAMwD,QAAQf,OAChBa,EAAM,UACNC,EAAM,iBACD,GAAwB,OAApBvD,EAAMyD,UAAoB,CAEnC,IAAIC,EADK,yBACgBd,MAAO,KAChCU,EAAMI,EAAY,GAClBH,EAAMG,EAAY,QAGlBJ,EAAMtD,EAAM2D,UACZJ,EAAMvD,EAAMyD,UAEd,OACE,kBAAC,YAAD,CACEG,YAAa,GACbC,cAAe,CAACP,IAAKR,OAAQQ,GAAMC,IAAKT,OAAQS,IAChDO,OAAQ,CACNR,IAAKR,OAAQQ,GACbC,IAAKT,OAAQS,IAEfQ,IAAK/D,EAAMgE,UACXC,UAAWjE,EAAMiE,WAEhBjE,EAAMwD,QAAQU,KAAK,SAAAC,GAClB,IAAMpD,EAAUf,EAAMe,QAAQI,U,EAAYgD,GACtCC,EAAQ,mCACRC,EAAQ,IAAIrB,KACZsB,EAAOD,EAAME,cAIbC,EAAOF,EAAO,KAHND,EAAMI,WAAc,GAGA,IAFrBJ,EAAMK,UAGbC,EAAYrC,EACdgC,EAAO,IAAMH,EAAOS,MAAQ,IAAMT,EAAOU,IACzCL,GAGEM,EADUX,EAAOY,OACMnC,MAAO,KAC9BoC,EAAOF,EAAa,GACpBG,EAAOH,EAAa,GAiBxB,OAXIH,EAAY,EAEdP,EAAQ,kCACCO,EAAY,EAErBP,EAAQ,qCACCO,EAAY,IAErBP,EAAQ,qCAIR,kBAAC,SAAD,CACEc,IAAKf,EAAO5D,GACZQ,QAASA,EACToE,SAAU,CAAC7B,IAAKR,OAAQkC,GAAOzB,IAAKT,OAAQmC,IAC5CG,QAAS,CAACC,KAAMjB,IAEfpE,EAAMsF,iBAAmBnB,GACxB,kBAAC,aAAD,KACE,6BACG,uBAAUA,EAAOoB,KAAK,6BACtB,uBAAUpB,EAAOqB,QAAQ,6BACzB,uBAAUrB,EAAOS,MAAQ,SAAMT,EAAOU,IAAM,WAXrD,YAsBWY,E,kDACnB,WAAazF,GAAQ,IAAD,8BAClB,cAAOA,IAWT0F,cAAgB,EAAKA,cAAcvE,KAAnB,gBAZI,EAapBwE,cAAgB,EAAKA,cAAcxE,KAAnB,gBAbI,EA8GpByE,YAAc,SAACzB,EAAQ0B,GACrB,EAAKhE,SAAU,CAACyD,eAAgBnB,KA7GhC,EAAK1C,MAAQ,CACXqE,SAAU,GACVR,gBAAgB,EAChBS,YAAa,EAAK/F,MAAMgG,aACxBC,cAAe,EAAKjG,MAAM0B,WAC1BwE,OAAQ,KACRvC,UAAW,KACXF,UAAW,MATK,E,+DAcA5D,EAAUC,GAG5B,GAAIC,KAAK0B,MAAMwE,gBAAkBlG,KAAKC,MAAM0B,WAE1C,OADAxB,QAAQC,IAAK,iIAA6CJ,OACnD,EAIPA,KAAK8B,SAAU,CAACoE,cAAelG,KAAKC,MAAM0B,aAC1C3B,KAAKoG,oBAEPjG,QAAQC,IAAK,wB,0CAEO,IAAD,OACnBiG,MAAOrG,KAAKC,MAAMgG,cACfK,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAE3BF,MAAM,SAAAG,GAEL,IAAIC,EAAS,IAAIC,OAAQ,SAAU,MAC/BC,EAAU,IAAID,OAAQ,qBAAsB,MAC5CE,EAAU,IAAIF,OAAQ,sBAAuB,MAC7CG,EAAU,IAAIH,OAAQ,mBAAoB,MAC1CI,EAAW,IAAIJ,OAAQ,aAAc,MACrCK,EAAUP,EAAaQ,QAAS,mBAAoB,IAAIC,OAsB5DF,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GALAA,GAHAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAUA,EAAQC,QAASP,EAAQ,IAAIQ,QACrBD,QAASL,EAAS,oBAAoBM,QACtCD,QAASF,EAAU,YAAYG,QAC/BD,QAAS,KAAM,IAAIC,QACnBD,QAASJ,EAAS,IAAIK,QACtBD,QAASH,EAAS,IAAII,QAIrCD,QAAS,OAAQ,IACjBA,QAAS,OAAQ,IACjBA,QAAS,OAAQ,IACjBA,QAAS,OAAQ,KACFA,QAAS,QAAS,UAAUC,QAC5BD,QAAS,WAAY,aAAaC,QAClCD,QAAS,OAAQ,SAASC,QAC1BD,QAAS,SAAU,WAAWC,QAC9BD,QAAS,OAAQ,SAASC,QAC1BD,QAAS,QAAS,UAAUC,QAC5BD,QAAS,QAAS,UAAUC,QAC5BD,QAAS,WAAY,aAAaC,QAClCD,QAAS,UAAW,YAAYC,OAWlD,IATA,IAAIC,EAAWC,KAAKC,MAAOL,GAEvBM,EAAU,GACVhD,EAAQ,IAAIrB,KACZsB,EAAOD,EAAME,cAIbC,EAAOF,EAAO,KAHND,EAAMI,WAAc,GAGA,IAFrBJ,EAAMK,UAGR4C,EAAI,EAAGA,EAAIJ,EAASzE,OAAQ6E,IAAK,CAC3BhF,EACXgC,EAAO,IAAM4C,EAASI,GAAT,MAAuB,IAAMJ,EAASI,GAAT,IAC1C9C,GAIW,IACX0C,EAASI,GAAT,GAAoBA,EACpBD,EAAQE,KAAML,EAASI,KAO3B,GAAuB,IAAnBD,EAAQ5E,OACV,OAAO,EAEP,EAAKZ,SAAU,CAACiE,SAAUuB,IAC1B,EAAKxF,SAAU,CAAC8B,UAAW,OAC3B,EAAK9B,SAAU,CAAC4B,UAAW,UAG9B+D,OAAO,SAAAxG,GACNd,QAAQC,IAAK,cAAea,Q,oCAgBnBkD,GACbnE,KAAK0H,cAAgBvD,I,sCAKrB,IAAIgC,EAASnG,KAAK0H,cACdnE,EAAM4C,EAAOwB,YAAapE,MAC1BC,EAAM2C,EAAOwB,YAAanE,MAC9BrD,QAAQC,IAAK,uBAAwBJ,KAAK0B,MAAMyE,QAChDhG,QAAQC,IACN+F,EAAOwB,YAAapE,MAAS,KAAO4C,EAAOwB,YAAanE,OAE1DxD,KAAK8B,SAAU,CAAC8B,UAAWL,IAC3BvD,KAAK8B,SAAU,CAAC4B,UAAWF,M,+BAG3B,OACE,kBAACL,EAAD,CACEoC,eAAgBvF,KAAK0B,MAAM6D,eAC3B9B,QAASzD,KAAK0B,MAAMqE,SACpBnC,UAAW5D,KAAK0B,MAAMkC,UACtBF,UAAW1D,KAAK0B,MAAMgC,UACtB1C,QAAShB,KAAK6F,YACd3B,UAAWlE,KAAK2F,cAChB1B,UAAWjE,KAAK4F,cAChBgC,aAAa,oFACbC,eAAgB,yBAAKjH,MAAO,CAACkH,OAAQ,UACrCC,iBACE,yBAAKtH,UAAU,YAAYG,MAAO,CAACkH,OAAQ,WAE7CE,WAAY,yBAAKpH,MAAO,CAACkH,OAAQ,gB,GAjJDhH,aC5CzBmH,G,yDAtDb,WAAahI,GAAQ,IAAD,8BAElB,cAAOA,IAGFyB,MAAQ,CACXC,WAAY,8CACZuG,SAAU,wBACVC,aAAc,CACZ9G,MAAO,8GACPC,IAAK,qGAVS,E,kGAwBlB,OAHAnB,QAAQC,IAAK,iIAA6CJ,MAIxD,yBAAKS,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKD,GAAG,aACN,kBAAC,EAAD,CACEa,MAAOrB,KAAK0B,MAAMyG,aAAa9G,MAC/BC,IAAKtB,KAAK0B,MAAMyG,aAAa7G,MAG/B,yBAAKb,UAAU,2BACb,kBAAC,EAAD,CACEkB,WAAY3B,KAAK0B,MAAMC,WACvBM,SAAU,SAAUmG,GAClBjI,QAAQC,IAAK,cAAegI,GAC5BpI,KAAK8B,SAAU,CAACuG,YAAaD,KAE7BhH,KAAMpB,QAEV,kBAAC,EAAD,CACEiG,aAAcjG,KAAK0B,MAAMwG,SACzBI,eAAgBtI,KAAK0B,MAAMC,eAIjC,kBAAC,EAAD,W,GAlDUb,cCREyH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,eAAgB,SD4H7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5C,MAAK,SAAA6C,GACJA,EAAaC,gBAEd3B,OAAM,SAAA4B,GACLlJ,QAAQkJ,MAAMA,EAAMC,c","file":"static/js/main.a27ac352.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nclass Header extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('Header.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 Header.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    const menuCloseStyle = {padding: '0 10px 0 50px', background: 'none'};\r\n    return (\r\n      <header id=\"header\">\r\n        <div className=\"header_area box_inner clear\">\r\n          <h1><a href=\"/\">리액트 IN 자바스크립트</a></h1>\r\n          <p className=\"openMOgnb\">\r\n            <a href=\"#LINK\">\r\n              <b className=\"hdd\">메뉴열기</b> <span /><span /><span />\r\n            </a>\r\n          </p>\r\n          {/* <!-- header_cont --> */}\r\n          <div className=\"header_cont\">\r\n            <ul className=\"util clear\">\r\n              <li><a href=\"#LINK\">로그인</a></li>\r\n              <li><a href=\"#LINK\">회원가입</a></li>\r\n            </ul>\r\n            <nav>\r\n              <ul className=\"gnb clear\">\r\n                <li>\r\n                  <a href=\"#LINK\" className=\"openAll1 openAll\">\r\n                    리액트정보\r\n                  </a>\r\n\r\n                  <div className=\"gnb_depth gnb_depth2_1\">\r\n                    <ul className=\"submenu_list\">\r\n                      <li>\r\n                        <a\r\n                          href=\"https://github.com/miniplugin/miniplugin.github.io\"\r\n                          target=\"_new\"\r\n                        >\r\n                          국내\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a\r\n                          href=\"https://github.com/miniplugin/miniplugin.github.io\"\r\n                          target=\"_new\"\r\n                        >\r\n                          해외\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                    <p className=\"closeSubmenu\" style={{float: 'right'}}>\r\n                      <a href=\"#LINK\" style={menuCloseStyle}>\r\n                        닫기\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#LINK\" className=\"openAll2 openAll\">고객센터</a>\r\n                  <div className=\"gnb_depth gnb_depth2_2\">\r\n                    <ul className=\"submenu_list\">\r\n                      <li><a href=\"#LINK\">한줄게시판</a></li>\r\n                      <li><a href=\"#LINK\">문의하기</a></li>\r\n                    </ul>\r\n                    <p className=\"closeSubmenu\" style={{float: 'right'}}>\r\n                      <a href=\"#LINK\" style={menuCloseStyle}>\r\n                        닫기\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <p className=\"closePop\"><a href=\"#LINK\">닫기</a></p>\r\n          </div>\r\n          {/* <!-- //header_cont --> */}\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nclass HeaderBanner extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('HeaderBanner.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 HeaderBanner.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    return (\r\n      <div className=\"location_area customer\">\r\n        <div className=\"box_inner\">\r\n          <h2 className=\"tit_page\">\r\n            <a\r\n              href=\"/\"\r\n              onClick={function (e) {\r\n                e.preventDefault ();\r\n                this.props.onChangePage ();\r\n              }.bind (this)}\r\n            >\r\n              {this.props.title}\r\n            </a>\r\n          </h2>\r\n          <p className=\"location\">\r\n            Google Maps API 키를 입력하지 않았기 때문에 아래와 같은 메세지가 나옵니다.\r\n            <span className=\"path\">/</span><br /><br />\r\n            [ {this.props.sub} ] - 하지만, 결과를 확인 하시는 데 지장은 없습니다.\r\n            <br /><br />[지도에 표시된 핀 이미지 색상의 의미]<br />\r\n            <img src=\"/design_publish/img/red-dot.png\" alt=\"plenty\" />\r\n            [확진 0~1일 이하] /\r\n            <img src=\"/design_publish/img/yellow-dot.png\" alt=\"some\" />\r\n            [확진 1~3일 이하] /\r\n            <img src=\"/design_publish/img/green-dot.png\" alt=\"few\" />\r\n            [확진 4~9일 이하]  /\r\n            <img src=\"/design_publish/img/gray-dot.png\" alt=\"empty,break\" />\r\n            [확진 10일 이상은 자료가 많아서 제외]\r\n          </p>\r\n          <ul className=\"page_menu clear\">\r\n            [지도에 표시된 핀 이미지 색상의 의미]<br /><br />\r\n            <li>\r\n              <img src=\"/design_publish/img/red-dot.png\" alt=\"plenty\" />\r\n              [확진 0~1일 이하]\r\n              <img src=\"/design_publish/img/yellow-dot.png\" alt=\"some\" />\r\n              [확진 1~3일 이하]\r\n            </li>\r\n            <li>\r\n              <img src=\"/design_publish/img/green-dot.png\" alt=\"few\" />\r\n              [확진 4~9일 이하]\r\n              <img src=\"/design_publish/img/gray-dot.png\" alt=\"empty,break\" />\r\n              [확진 10일 이상은 자료가 많아서 제외]\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HeaderBanner;\r\n","import React, {Component} from 'react';\r\nclass SearchForm extends Component {\r\n  //검색폼 내용 수정\r\n  constructor (props) {\r\n    super (props);\r\n    this.state = {\r\n      searchWord: this.props.searchWord,\r\n    };\r\n    this.inputFormHandler = this.inputFormHandler.bind (this);\r\n  }\r\n  inputFormHandler (e) {\r\n    console.log (e.target.value);\r\n    this.setState ({[e.target.id]: e.target.value});\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 SearchForm.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    return (\r\n      <form\r\n        action=\"/search_process\"\r\n        className=\"minisrch_form\"\r\n        method=\"post\"\r\n        onSubmit={function (e) {\r\n          e.preventDefault ();\r\n          //alert ('검색'); //디버그\r\n          this.props.onSubmit (e.target.searchWord.value);\r\n        }.bind (this)}\r\n      >\r\n        <fieldset>\r\n          <legend>검색</legend>\r\n          <input\r\n            id=\"searchWord\"\r\n            type=\"search\"\r\n            className=\"tbox\"\r\n            title=\"검색어를 입력해주세요\"\r\n            placeholder=\"반드시, 시(도) 구 동 순서로 입력\"\r\n            value={this.state.searchWord}\r\n            onChange={this.inputFormHandler}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn_srch\"\r\n            value=\"검색\"\r\n            style={{cursor: 'pointer'}}\r\n          />\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default SearchForm;\r\n","import React, {Component} from 'react';\r\nclass Footer extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('Footer.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 Footer.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    return (\r\n      <footer>\r\n        <div className=\"foot_area box_inner\">\r\n          <ul className=\"foot_list clear\">\r\n            <li><a href=\"#LINK\">이용약관</a></li>\r\n            <li><a href=\"#LINK\">개인정보취급방침</a></li>\r\n          </ul>\r\n          <h2>리액트</h2>\r\n          <p className=\"addr\">\r\n            리액트 IN 자바스크립트 <span className=\"gubun\">/</span>\r\n            <span className=\"br_line\">\r\n              대표전화 <span className=\"space0\">02-1234-5678</span>\r\n              <span className=\"gubun\">/</span>\r\n              <span className=\"br_line\">\r\n                E-mail :<span className=\"space0\"> kimilguk@knou.ac.kr</span>\r\n              </span>\r\n            </span>\r\n          </p>\r\n          <p className=\"copy box_inner\">\r\n            Copyright(c) 리액트 IN 자바스크립트 all right reserved\r\n          </p>\r\n          <ul className=\"snslink clear\">\r\n            <li><a href=\"#LINK\">blog</a></li>\r\n            <li><a href=\"#LINK\">facebook</a></li>\r\n            <li><a href=\"#LINK\">instargram</a></li>\r\n          </ul>\r\n        </div>\r\n\r\n        <h2 className=\"hdd\">빠른 링크 : 전화 문의,카카오톡,오시는 길,꼭대기로</h2>\r\n        <div className=\"quick_area\">\r\n          {/* <ul className=\"quick_list\">\r\n            <li>\r\n              <a href=\"#LINK\">\r\n                <h3>전화 문의</h3>\r\n                <p>010-1234-5678</p>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#LINK\">\r\n                <h3>카카오톡 <em>상담</em></h3>\r\n                <p>1:1상담</p>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#LINK\"><h3 className=\"to_contact\">오시는 길</h3></a>\r\n            </li>\r\n          </ul> */}\r\n          <p className=\"to_top\">\r\n            <a href=\"#layout0\" className=\"s_point\">TOP</a>\r\n          </p>\r\n        </div>\r\n\r\n      </footer>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport {compose} from 'recompose';\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n} from 'react-google-maps';\r\n\r\n/**\r\n     * 두 날짜의 차이를 일자로 구한다.(조회 종료일 - 조회 시작일)\r\n     *\r\n     * @param val1 - 조회 시작일(날짜 ex.2020-01-02)\r\n     * @param val2 - 조회 종료일(날짜 ex.2020-01-01)\r\n     * @return 기간에 해당하는 일자 위 결과는 1일\r\n     */\r\nfunction calDateRange (val1, val2) {\r\n  var FORMAT = '-';\r\n  // FORMAT을 포함한 길이 체크\r\n  if (val1.length > 10 || val2.length > 10) return null;\r\n  // FORMAT이 있는지 체크\r\n  if (val1.indexOf (FORMAT) < 0 || val2.indexOf (FORMAT) < 0) return null;\r\n  // 년도, 월, 일로 분리\r\n  var start_dt = val1.split (FORMAT);\r\n  var end_dt = val2.split (FORMAT);\r\n  // 월 - 1(자바스크립트는 월이 0부터 시작하기 때문에...)\r\n  // Number()를 이용하여 08, 09월을 10진수로 인식하게 함.\r\n  start_dt[1] = Number (start_dt[1]) - 1 + '';\r\n  end_dt[1] = Number (end_dt[1]) - 1 + '';\r\n\r\n  var from_dt = new Date (start_dt[0], start_dt[1], start_dt[2]);\r\n  var to_dt = new Date (end_dt[0], end_dt[1], end_dt[2]);\r\n  return (to_dt.getTime () - from_dt.getTime ()) / 1000 / 60 / 60 / 24;\r\n}\r\n\r\nconst MapWithAMarker = compose (withScriptjs, withGoogleMap) (props => {\r\n  //console.log ('props.markers', props.markers.map);\r\n  //console.log ('props.markers.length----------', props.markers.length);\r\n  var lat, lng, latlng = null;\r\n  if (props.markers.length === 0) {\r\n    lat = 36.818434; //초기엔 사용자 위치정보를 필요로 하지 않는다.\r\n    lng = 127.1527916; //그래서 초기값을 더미로 주었습니다.\r\n  } else if (props.mapReflng === null) {\r\n    latlng = '36.818434, 127.1527916'; //props.markers[0].latlng;\r\n    var arraylatlng = latlng.split (',');\r\n    lat = arraylatlng[0];\r\n    lng = arraylatlng[1];\r\n  } else {\r\n    //console.log ('props.mapReflng----------', props.mapReflng);\r\n    lat = props.mapReflat;\r\n    lng = props.mapReflng;\r\n  }\r\n  return (\r\n    <GoogleMap\r\n      defaultZoom={12}\r\n      defaultCenter={{lat: Number (lat), lng: Number (lng)}}\r\n      center={{\r\n        lat: Number (lat),\r\n        lng: Number (lng),\r\n      }}\r\n      ref={props.onMapLoad}\r\n      onDragEnd={props.onDragEnd}\r\n    >\r\n      {props.markers.map (marker => {\r\n        const onClick = props.onClick.bind (this, marker);\r\n        var icons = '/design_publish/img/gray-dot.png';\r\n        let today = new Date ();\r\n        let year = today.getFullYear (); // 년도\r\n        let month = today.getMonth () + 1; // 월\r\n        let date = today.getDate (); // 날짜\r\n        //let day = today.getDay (); // 요일\r\n        var nows = year + '-' + month + '-' + date;\r\n        var resultday = calDateRange (\r\n          year + '-' + marker.month + '-' + marker.day,\r\n          nows\r\n        );\r\n        var latlng2 = marker.latlng;\r\n        var arraylatlng2 = latlng2.split (',');\r\n        var lat2 = arraylatlng2[0];\r\n        var lng2 = arraylatlng2[1];\r\n        /* console.log (\r\n          'marker.latlng----------- : ' + resultday,\r\n          marker.name,\r\n          marker.address\r\n        ); */\r\n        if (resultday < 1) {\r\n          //'0~1일이하';\r\n          icons = '/design_publish/img/red-dot.png';\r\n        } else if (resultday < 4) {\r\n          //'1~3일이하';\r\n          icons = '/design_publish/img/yellow-dot.png';\r\n        } else if (resultday < 9) {\r\n          //'4~9일이하';\r\n          icons = '/design_publish/img/green-dot.png';\r\n        }\r\n        //Math.floor (Math.random () * 50000 + 1)\r\n        return (\r\n          <Marker\r\n            key={marker.id}\r\n            onClick={onClick}\r\n            position={{lat: Number (lat2), lng: Number (lng2)}}\r\n            options={{icon: icons}}\r\n          >\r\n            {props.selectedMarker === marker &&\r\n              <InfoWindow>\r\n                <div>\r\n                  {'확진자: ' + marker.name}<br />\r\n                  {'방문처: ' + marker.address}<br />\r\n                  {'확진일: ' + marker.month + '월' + marker.day + '일'}\r\n                </div>\r\n              </InfoWindow>}\r\n            }\r\n          </Marker>\r\n        );\r\n      })}\r\n    </GoogleMap>\r\n  );\r\n});\r\n\r\nexport default class ShelterMap extends Component {\r\n  constructor (props) {\r\n    super (props);\r\n    this.state = {\r\n      shelters: [],\r\n      selectedMarker: false,\r\n      mapFetchUrl: this.props.fetchUrldata,\r\n      mapSearchWord: this.props.searchWord,\r\n      mapRef: null,\r\n      mapReflat: null,\r\n      mapReflng: null,\r\n    };\r\n  }\r\n  handleMapDrag = this.handleMapDrag.bind (this);\r\n  handleMapLoad = this.handleMapLoad.bind (this);\r\n  componentDidUpdate (newProps, newState) {\r\n    //console.log ('this.state.mapSearchWord === ', this.state.mapSearchWord);\r\n    //console.log ('this.props.searchWord === ', this.props.searchWord);\r\n    if (this.state.mapSearchWord === this.props.searchWord) {\r\n      console.log ('render()안에서 this는 Map.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n      return false;\r\n    } else {\r\n      //alert ('this.state.mapSearchWord);\r\n      //alert ('Map: ' + this.props.searchWord);\r\n      this.setState ({mapSearchWord: this.props.searchWord});\r\n      this.componentDidMount ();\r\n    }\r\n    console.log ('componentDidUpdate');\r\n  }\r\n  componentDidMount () {\r\n    fetch (this.props.fetchUrldata)\r\n      .then (response => response.text ())\r\n      //.then (mapdata => console.log ('JSONP--------------: ', mapdata))\r\n      .then (responseText => {\r\n        //var position = JSON.stringify (responseText);\r\n        var regExp = new RegExp ('//.*\\n', 'gm');\r\n        var regExp2 = new RegExp ('address_english:\\n', 'gm');\r\n        var regExp3 = new RegExp ('address_english.*\\n', 'gm');\r\n        var regExp5 = new RegExp ('address_name.*\\n', 'gm');\r\n        var regExp13 = new RegExp ('address:\\n', 'gm');\r\n        var mapdata = responseText.replace (/var position = /g, '').trim ();\r\n        mapdata = mapdata.replace (regExp, '').trim ();\r\n        mapdata = mapdata.replace (regExp2, 'address_english:').trim ();\r\n        mapdata = mapdata.replace (regExp13, 'address:').trim ();\r\n        mapdata = mapdata.replace (/;/g, '').trim ();\r\n        mapdata = mapdata.replace (regExp3, '').trim ();\r\n        mapdata = mapdata.replace (regExp5, '').trim ();\r\n        //mapdata = mapdata.replace (/\\[/g, '{\"position\": [').trim ();\r\n        //mapdata = mapdata.replace (/\\]/g, ']}').trim ();\r\n        mapdata = mapdata\r\n          .replace (/\\r/gi, '')\r\n          .replace (/\\n/gi, '')\r\n          .replace (/\\t/gi, '')\r\n          .replace (/\\f/gi, '');\r\n        mapdata = mapdata.replace (/solo/g, '\"solo\"').trim ();\r\n        mapdata = mapdata.replace (/profile/g, '\"profile\"').trim ();\r\n        mapdata = mapdata.replace (/tag/g, '\"tag\"').trim ();\r\n        mapdata = mapdata.replace (/month/g, '\"month\"').trim ();\r\n        mapdata = mapdata.replace (/day/g, '\"day\"').trim ();\r\n        mapdata = mapdata.replace (/name/g, '\"name\"').trim ();\r\n        mapdata = mapdata.replace (/full/g, '\"full\"').trim ();\r\n        mapdata = mapdata.replace (/address/g, '\"address\"').trim ();\r\n        mapdata = mapdata.replace (/latlng/g, '\"latlng\"').trim ();\r\n        //console.log ('mapdata--------------: ', mapdata);\r\n        var jsondata = JSON.parse (mapdata);\r\n        //console.log ('jsondata.length----------: ', jsondata.length);\r\n        var results = [];\r\n        let today = new Date ();\r\n        let year = today.getFullYear (); // 년도\r\n        let month = today.getMonth () + 1; // 월\r\n        let date = today.getDate (); // 날짜\r\n        //let day = today.getDay (); // 요일\r\n        var nows = year + '-' + month + '-' + date;\r\n        for (var i = 0; i < jsondata.length; i++) {\r\n          var calDay = calDateRange (\r\n            year + '-' + jsondata[i]['month'] + '-' + jsondata[i]['day'],\r\n            nows\r\n          );\r\n          //console.log ('calDay-----------------: ', calDay);\r\n          //jsondata[i]['month']+jsondata[i]['day']\r\n          if (calDay < 9) {\r\n            jsondata[i]['id'] = i;\r\n            results.push (jsondata[i]);\r\n          }\r\n        }\r\n        /* jsondata = jsondata.filter (l => {\r\n          return l.name.toLowerCase ().match ('천안');\r\n        }); */\r\n        //console.log ('returnObject.length----------: ', results);\r\n        if (results.length === 0) {\r\n          return false;\r\n        } else {\r\n          this.setState ({shelters: results});\r\n          this.setState ({mapReflat: null});\r\n          this.setState ({mapReflng: null});\r\n        }\r\n      })\r\n      .catch (e => {\r\n        console.log ('fetch Error', e);\r\n      });\r\n    /* fetch (this.props.fetchUrldata).then (r => r.json ()).then (mapdata => {\r\n      console.log ('mapdata--------------------: ', mapdata);\r\n      if (mapdata.count === 0) {\r\n        return false;\r\n      } else {\r\n        this.setState ({shelters: mapdata.position});\r\n        this.setState ({mapReflat: null});\r\n        this.setState ({mapReflng: null});\r\n      }\r\n    }); */\r\n  }\r\n  handleClick = (marker, event) => {\r\n    this.setState ({selectedMarker: marker});\r\n  };\r\n  handleMapLoad (map) {\r\n    this._mapComponent = map;\r\n    //this.setState ({mapRef: this._mapComponent});\r\n    //console.log ('getBounds', map.getBounds ());\r\n  }\r\n  handleMapDrag () {\r\n    let mapRef = this._mapComponent;\r\n    var lat = mapRef.getCenter ().lat ();\r\n    var lng = mapRef.getCenter ().lng ();\r\n    console.log ('mapRef:-------------', this.state.mapRef);\r\n    console.log (\r\n      mapRef.getCenter ().lat () + '; ' + mapRef.getCenter ().lng ()\r\n    );\r\n    this.setState ({mapReflat: lat});\r\n    this.setState ({mapReflng: lng});\r\n  }\r\n  render () {\r\n    return (\r\n      <MapWithAMarker\r\n        selectedMarker={this.state.selectedMarker}\r\n        markers={this.state.shelters}\r\n        mapReflat={this.state.mapReflat}\r\n        mapReflng={this.state.mapReflng}\r\n        onClick={this.handleClick}\r\n        onDragEnd={this.handleMapDrag}\r\n        onMapLoad={this.handleMapLoad}\r\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\" //key=YOUR_API_KEY&\r\n        loadingElement={<div style={{height: '100%'}} />}\r\n        containerElement={\r\n          <div className=\"secondMap\" style={{height: '100vh'}} />\r\n        }\r\n        mapElement={<div style={{height: '100%'}} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/* App.js */\nimport React, {Component} from 'react';\nimport Header from './components/Header';\nimport HeaderBanner from './components/HeaderBanner';\nimport SearchForm from './components/SearchForm';\nimport Footer from './components/Footer';\nimport Map from './components/Map';\nimport './App.css';\n//헤더 컴포넌트를 만드는 코드(src/components/HeaderBanner.js)\n\n//외부 데이터 확인용(도메인은 proxy로 package.json에 지정 + /javascripts/ndata.js)\n/* const url = '/javascripts/ndata.js';\nfetch (url)\n  .then (response => response.text ())\n  .then (contents => console.log ('JSONP--------------: ', contents))\n  .catch (() =>\n    console.log ('Can’t access ' + url + ' response. Blocked by browser?')\n  ); */\n\n//메인 컴포넌트를 만드는 코드(아래)\nclass App extends Component {\n  //콤포넌트 생성자 : 콤포넌트 실행시 자동 실행(초기화)\n  constructor (props) {\n    //props(속성) 과 state(자료) 관계\n    super (props); //부모클래스-Component의 props속성을 사용하겠다고 선언, 이후 부터 this 키워드 사용가능\n\n    //부모클래스 props속성의 state값 초기화\n    this.state = {\n      searchWord: '충청남도 천안시', //검색어 상태 입력예, 도(광역시) 시(군) 단위입력\n      fetchUrl: '/javascripts/ndata.js',\n      headerBanner: {\n        title: '이 사이트는 리액트기술 테스트용 입니다.',\n        sub: 'Google 지도를 제대로 로드할 수 없습니다.',\n      }, //json 1차원 데이터 객체\n    };\n  }\n\n  componentDidMount () {\n    //query = encodeURIComponent (this.state.searchWord);\n  }\n  //props-state의 값이 바뀌면 html을 그리는 함수 render 자동으로 재 실행됨\n  render () {\n    //console.clear (); //콘솔 지저분한것 때문에... 디버그시 주석해제 필요.\n    console.log ('render()안에서 this는 App.js콤포넌트 모듈 자신을 가리킨다.', this);\n\n    //constructor (props) 부모클래스의 초기화한 값을 아래 태그의 속성(props)에 this값으로 전달\n    return (\n      <div className=\"App\">\n        <Header />\n        <div id=\"container\">\n          <HeaderBanner\n            title={this.state.headerBanner.title}\n            sub={this.state.headerBanner.sub}\n          />\n          {/* <!-- bodytext_area --> */}\n          <div className=\"bodytext_area box_inner\">\n            <SearchForm\n              searchWord={this.state.searchWord}\n              onSubmit={function (_searchWord) {\n                console.log ('_searchWord', _searchWord); //디버그\n                this.setState ({seearchWord: _searchWord});\n                //화면 리프레시가 않됨-관련함수:shouldComponentUpdate.\n              }.bind (this)}\n            />\n            <Map\n              fetchUrldata={this.state.fetchUrl}\n              searchWorddata={this.state.searchWord}\n            />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* index.js */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (<App />, document.getElementById ('wrap'));\n\n// 앱이 오프라인에서 작동하고 더 빨리로드되도록하려면\n// 아래의 unregister()를 register()로 변경 합니다.\nserviceWorker.unregister ();\n"],"sourceRoot":""}