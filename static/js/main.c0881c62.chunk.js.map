{"version":3,"sources":["components/Header.js","components/HeaderBanner.js","components/SearchForm.js","components/BoardList.js","components/BoardView.js","components/Footer.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["Header","newProps","newState","this","props","data","console","log","menuCloseStyle","padding","background","id","className","href","target","style","float","Component","HeaderBanner","onClick","e","preventDefault","onChangePage","bind","title","sub","SearchForm","state","searchWord","inputFormHandler","value","setState","action","method","onSubmit","type","placeholder","onChange","cursor","BoardList","param","lists","alert","listCount","length","i","push","key","code","name","data-code","dataset","addr","renderCssSwitch","remain_stat","renderSwitch","stock_at","created_at","lat","lng","summary","scope","BoardView","center","zoom","showMyComponent","onMarkerClick","evt","undefined","onMarkerDeleteClick","new_center","width","height","textAlign","fontSize","onClosePage","defaultCenter","defaultZoom","text","border","fontweight","display","Footer","MapWithAMarker","compose","withScriptjs","withGoogleMap","markers","map","marker","icons_text","icons","position","options","icon","selectedMarker","ShelterMap","handleClick","event","shelters","mapFetchUrl","fetchUrldata","componentDidMount","fetch","then","r","json","mapdata","stores","googleMapURL","loadingElement","containerElement","mapElement","App","max_board_id","mode","selected_boardView_id","fetchUrl","headerBanner","boardList","_searchWord","boardList_storeInfos","localfetchUrl","encodeURIComponent","response","responseText","jsonResult","JSON","parse","catch","error","_article","_content","getBoardViewContent","clear","getBoardView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c0881c62.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nclass Header extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('Header.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 Header.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    const menuCloseStyle = {padding: '0 10px 0 50px', background: 'none'};\r\n    return (\r\n      <header id=\"header\">\r\n        <div className=\"header_area box_inner clear\">\r\n          <h1><a href=\"/\">리액트 IN 자바스크립트</a></h1>\r\n          <p className=\"openMOgnb\">\r\n            <a href=\"#LINK\">\r\n              <b className=\"hdd\">메뉴열기</b> <span /><span /><span />\r\n            </a>\r\n          </p>\r\n          {/* <!-- header_cont --> */}\r\n          <div className=\"header_cont\">\r\n            <ul className=\"util clear\">\r\n              <li><a href=\"#LINK\">로그인</a></li>\r\n              <li><a href=\"#LINK\">회원가입</a></li>\r\n            </ul>\r\n            <nav>\r\n              <ul className=\"gnb clear\">\r\n                <li>\r\n                  <a href=\"#LINK\" className=\"openAll1 openAll\">\r\n                    리액트정보\r\n                  </a>\r\n\r\n                  <div className=\"gnb_depth gnb_depth2_1\">\r\n                    <ul className=\"submenu_list\">\r\n                      <li>\r\n                        <a\r\n                          href=\"https://github.com/miniplugin/miniplugin.github.io\"\r\n                          target=\"_new\"\r\n                        >\r\n                          국내\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a\r\n                          href=\"https://github.com/miniplugin/miniplugin.github.io\"\r\n                          target=\"_new\"\r\n                        >\r\n                          해외\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                    <p className=\"closeSubmenu\" style={{float: 'right'}}>\r\n                      <a href=\"#LINK\" style={menuCloseStyle}>\r\n                        닫기\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#LINK\" className=\"openAll2 openAll\">고객센터</a>\r\n                  <div className=\"gnb_depth gnb_depth2_2\">\r\n                    <ul className=\"submenu_list\">\r\n                      <li><a href=\"#LINK\">한줄게시판</a></li>\r\n                      <li><a href=\"#LINK\">문의하기</a></li>\r\n                    </ul>\r\n                    <p className=\"closeSubmenu\" style={{float: 'right'}}>\r\n                      <a href=\"#LINK\" style={menuCloseStyle}>\r\n                        닫기\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <p className=\"closePop\"><a href=\"#LINK\">닫기</a></p>\r\n          </div>\r\n          {/* <!-- //header_cont --> */}\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nclass HeaderBanner extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('HeaderBanner.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 HeaderBanner.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    return (\r\n      <div className=\"location_area customer\">\r\n        <div className=\"box_inner\">\r\n          <h2 className=\"tit_page\">\r\n            <a\r\n              href=\"/\"\r\n              onClick={function (e) {\r\n                e.preventDefault ();\r\n                this.props.onChangePage ();\r\n              }.bind (this)}\r\n            >\r\n              {this.props.title}\r\n            </a>\r\n          </h2>\r\n          <p className=\"location\">\r\n            Google Maps API 키를 입력하지 않았기 때문에 아래와 같은 메세지가 나옵니다.\r\n            <span className=\"path\">/</span><br /><br />\r\n            [ {this.props.sub} ] - 하지만, 결과를 확인 하시는 데 지장은 없습니다.\r\n          </p>\r\n          <ul className=\"page_menu clear\">\r\n            <li>\r\n              <a\r\n                href=\"/\"\r\n                onClick={function (e) {\r\n                  e.preventDefault ();\r\n                  this.props.onChangePage ();\r\n                }.bind (this)}\r\n              >\r\n                {this.props.title}\r\n              </a>\r\n            </li>\r\n            <li>{this.props.sub}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HeaderBanner;\r\n","import React, {Component} from 'react';\r\nclass SearchForm extends Component {\r\n  //검색폼 내용 수정\r\n  constructor (props) {\r\n    super (props);\r\n    this.state = {\r\n      searchWord: this.props.searchWord,\r\n    };\r\n    this.inputFormHandler = this.inputFormHandler.bind (this);\r\n  }\r\n  inputFormHandler (e) {\r\n    console.log (e.target.value);\r\n    this.setState ({[e.target.id]: e.target.value});\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 SearchForm.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    return (\r\n      <form\r\n        action=\"/search_process\"\r\n        className=\"minisrch_form\"\r\n        method=\"post\"\r\n        onSubmit={function (e) {\r\n          e.preventDefault ();\r\n          //alert ('검색'); //디버그\r\n          this.props.onSubmit (e.target.searchWord.value);\r\n        }.bind (this)}\r\n      >\r\n        <fieldset>\r\n          <legend>검색</legend>\r\n          <input\r\n            id=\"searchWord\"\r\n            type=\"search\"\r\n            className=\"tbox\"\r\n            title=\"검색어를 입력해주세요\"\r\n            placeholder=\"반드시, 시(도) 구 동 순서로 입력\"\r\n            value={this.state.searchWord}\r\n            onChange={this.inputFormHandler}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn_srch\"\r\n            value=\"검색\"\r\n            style={{cursor: 'pointer'}}\r\n          />\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default SearchForm;\r\n","import React, {Component} from 'react';\r\nclass BoardList extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('BoardList.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  renderSwitch (param) {\r\n    switch (param) {\r\n      case 'plenty':\r\n        return '100개이상';\r\n      case 'some':\r\n        return '30개 이상 100개미만';\r\n      case 'few':\r\n        return '2개 이상 30개 미만';\r\n      case 'empty':\r\n        return '1개 이하';\r\n      case 'break':\r\n        return '판매중지';\r\n      default:\r\n        return '정보없음';\r\n    }\r\n  }\r\n  renderCssSwitch (param) {\r\n    switch (param) {\r\n      case 'plenty':\r\n        return 'plenty';\r\n      case 'some':\r\n        return 'some';\r\n      case 'few':\r\n        return 'few';\r\n      case 'empty':\r\n        return 'empty';\r\n      case 'break':\r\n        return 'break';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 BoardList.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    //출력 데이터 처리\r\n    var lists = [];\r\n    var data = this.props.data;\r\n    if (data == null) {\r\n      alert ('데이터가 없습니다.');\r\n      return false;\r\n    }\r\n    var listCount = data.length;\r\n    var i = 0;\r\n    while (i < data.length) {\r\n      lists.push (\r\n        //반복구문 key값-고유값 처리\r\n        <tr key={data[i].code}>\r\n          <td>{data[i].name} </td>\r\n          <td className=\"tit_notice\">\r\n            <a\r\n              href={'/board/' + data[i].code}\r\n              data-code={data[i].code} //이 부분을 사용하지 않는다면, 아래 //주석부분처럼 값을 변경해야 합니다.\r\n              onClick={function (e) {\r\n                //(id,e)\r\n                //debugger;//크롬 디버거연동\r\n                e.preventDefault ();\r\n                this.props.onChangePage (e.target.dataset.code);\r\n              }.bind (this)} //(this, data[i].code)\r\n            >\r\n              {data[i].addr}\r\n            </a>\r\n          </td>\r\n          <td className={this.renderCssSwitch (data[i].remain_stat)}>\r\n            {this.renderSwitch (data[i].remain_stat)}\r\n          </td>\r\n          <td>{data[i].stock_at} </td>\r\n          <td>{data[i].created_at} </td>\r\n          <td>{data[i].lat}, {data[i].lng}</td>\r\n        </tr>\r\n      );\r\n      i = i + 1;\r\n    }\r\n    return (\r\n      <div>\r\n        {/* <!-- BoardList --> */}\r\n        <table className=\"bbsListTbl\" summary=\"번호,주소,코드,위도,경도,약국명,타입 등을 제공하는 표\">\r\n          <caption className=\"hdd\">\r\n            공지사항 목록\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <td>검색결과</td>\r\n              <td>[검색: {listCount} 개]<br />주소[클릭시 판매처별 확대지도가 나타납니다.]</td>\r\n              <td /><td /><td /><td />\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">판매처명</th>\r\n              <th scope=\"col\">주소</th>\r\n              <th scope=\"col\">재고상태</th>\r\n              <th scope=\"col\">입고시간</th>\r\n              <th scope=\"col\">생성일자</th>\r\n              <th scope=\"col\">위도,경도</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lists}\r\n          </tbody>\r\n        </table>\r\n        {/* <!-- //BoardList --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BoardList;\r\n","import React, {Component} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n//구글맵 기술참조: https://github.com/google-map-react/google-map-react //사용함.\r\n//npm install --save google-map-react //사용함.\r\nclass BoardView extends Component {\r\n  constructor (props) {\r\n    super (props); //부모클래스-Component의 props속성을 사용하겠다고 선언, 이후 부터 this 키워드 사용가능\r\n    this.state = {\r\n      center: {\r\n        lat: this.props.lat, //36.818434,\r\n        lng: this.props.lng, //127.1527916,\r\n      },\r\n      zoom: 18,\r\n      showMyComponent: 'show',\r\n    };\r\n  }\r\n  renderSwitch (param) {\r\n    switch (param) {\r\n      case 'plenty':\r\n        return '100개이상';\r\n      case 'some':\r\n        return '30개 이상 100개미만';\r\n      case 'few':\r\n        return '2개 이상 30개 미만';\r\n      case 'empty':\r\n        return '1개 이하';\r\n      case 'break':\r\n        return '판매중지';\r\n      default:\r\n        return '정보없음';\r\n    }\r\n  }\r\n  renderCssSwitch (param) {\r\n    switch (param) {\r\n      case 'plenty':\r\n        return 'plenty';\r\n      case 'some':\r\n        return 'some';\r\n      case 'few':\r\n        return 'few';\r\n      case 'empty':\r\n        return 'empty';\r\n      case 'break':\r\n        return 'break';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n  render () {\r\n    const onMarkerClick = evt => {\r\n      //alert (this.props.showMyComponent);\r\n      //alert (this.state.showMyComponent);\r\n      if (this.state.showMyComponent === undefined) {\r\n        this.setState ({showMyComponent: 'show'});\r\n      } else {\r\n        this.setState ({showMyComponent: undefined});\r\n      }\r\n    };\r\n    const onMarkerDeleteClick = evt => {\r\n      this.setState ({showMyComponent: undefined});\r\n    };\r\n    const AnyReactComponent = ({text}) => (\r\n      <div>\r\n        <div\r\n          className={this.renderCssSwitch (this.props.remain_stat)}\r\n          style={{\r\n            width: 'max-content',\r\n            border: '1px solid',\r\n            padding: '5px',\r\n            fontweight: 'bold',\r\n          }}\r\n          onClick={onMarkerClick}\r\n        >\r\n          {text}\r\n        </div>\r\n        <div\r\n          className=\"pop\"\r\n          style={\r\n            this.state.showMyComponent\r\n              ? {\r\n                  background: 'white',\r\n                  width: 'max-content',\r\n                  border: '1px solid',\r\n                  padding: '5px',\r\n                  fontweight: 'bold',\r\n                }\r\n              : {display: 'none'}\r\n          }\r\n          onClick={onMarkerDeleteClick}\r\n        >\r\n          {'판매처: ' + this.props.name}<br />\r\n          {'재고상태: ' + this.renderSwitch (this.props.remain_stat)}<br />\r\n          {'주소: ' + this.props.addr}<br />\r\n          {'입고시간: ' + this.props.stock_at}\r\n        </div>\r\n      </div>\r\n    );\r\n    var new_center = {\r\n      lat: this.props.lat, //36.818434,\r\n      lng: this.props.lng, //127.1527916,\r\n    };\r\n    console.log ('render()안에서 this는 BoardView.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    //var i = 0;//아래 textarea 에서 사용시.\r\n    return (\r\n      <div className=\"popup\">\r\n        {/* <!-- 지도 사용 공간 --> */}\r\n        <div\r\n          className=\"popup_inner\"\r\n          id=\"map_canvas\"\r\n          style={{width: '50%', height: '50vh'}}\r\n        >\r\n          <div style={{textAlign: 'right'}}>\r\n            <button\r\n              style={{fontSize: '1.3em', padding: '0 5px'}}\r\n              onClick={function (e) {\r\n                e.preventDefault ();\r\n                this.props.onClosePage ();\r\n              }.bind (this)}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n          <GoogleMapReact\r\n            //bootstrapURLKeys={{key: 'YOUR KEY HERE'}}//\r\n            defaultCenter={this.state.center}\r\n            center={new_center}\r\n            defaultZoom={this.state.zoom}\r\n          >\r\n            <AnyReactComponent\r\n              lat={this.props.lat}\r\n              lng={this.props.lng}\r\n              text={this.props.name}\r\n            />\r\n          </GoogleMapReact>\r\n        </div>\r\n        {/* <!-- BoardView --> */}\r\n        {/*this.props.desc.replace (/\\n/g, '<br/>')*/}\r\n        {/* <ul className=\"bbsview_list\">\r\n          <li className=\"bbs_title\">{this.props.name}</li>\r\n          <li className=\"bbs_content\">\r\n            <div className=\"editer_content\">\r\n              {this.props.addr.split ('\\n').map (line => {\r\n                return <span key={i++}>{line}<br /></span>;\r\n              })}\r\n            </div>\r\n          </li>\r\n          <li className=\"bbs_title\">위도:{this.props.lat}</li>\r\n          <li className=\"bbs_title\">경도:{this.props.lng}</li>\r\n          <li className=\"bbs_title\">타입:{this.props.type}</li>\r\n          <li className=\"bbs_title\">입고시간:{this.props.stock_at}</li>\r\n          <li className=\"bbs_title\">재고상태:{this.props.remain_stat}</li>\r\n          <li className=\"bbs_title\">데이터생성일자:{this.props.created_at}</li>\r\n        </ul> */}\r\n        {/* <!-- //BoardView --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BoardView;\r\n","import React, {Component} from 'react';\r\nclass Footer extends Component {\r\n  //무조건 render()가 호출되는 상황을 방지 false, true\r\n  shouldComponentUpdate (newProps, newState) {\r\n    if (this.props.data === newProps.data) {\r\n      console.log ('Footer.js콤포넌트 값 무변경시 리로드 render()방지');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render () {\r\n    console.log ('render()안에서 this는 Footer.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n    return (\r\n      <footer>\r\n        <div className=\"foot_area box_inner\">\r\n          <ul className=\"foot_list clear\">\r\n            <li><a href=\"#LINK\">이용약관</a></li>\r\n            <li><a href=\"#LINK\">개인정보취급방침</a></li>\r\n          </ul>\r\n          <h2>리액트</h2>\r\n          <p className=\"addr\">\r\n            리액트 IN 자바스크립트 <span className=\"gubun\">/</span>\r\n            <span className=\"br_line\">\r\n              대표전화 <span className=\"space0\">02-1234-5678</span>\r\n              <span className=\"gubun\">/</span>\r\n              <span className=\"br_line\">\r\n                E-mail :<span className=\"space0\"> kimilguk@knou.ac.kr</span>\r\n              </span>\r\n            </span>\r\n          </p>\r\n          <p className=\"copy box_inner\">\r\n            Copyright(c) 리액트 IN 자바스크립트 all right reserved\r\n          </p>\r\n          <ul className=\"snslink clear\">\r\n            <li><a href=\"#LINK\">blog</a></li>\r\n            <li><a href=\"#LINK\">facebook</a></li>\r\n            <li><a href=\"#LINK\">instargram</a></li>\r\n          </ul>\r\n        </div>\r\n\r\n        <h2 className=\"hdd\">빠른 링크 : 전화 문의,카카오톡,오시는 길,꼭대기로</h2>\r\n        <div className=\"quick_area\">\r\n          {/* <ul className=\"quick_list\">\r\n            <li>\r\n              <a href=\"#LINK\">\r\n                <h3>전화 문의</h3>\r\n                <p>010-1234-5678</p>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#LINK\">\r\n                <h3>카카오톡 <em>상담</em></h3>\r\n                <p>1:1상담</p>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#LINK\"><h3 className=\"to_contact\">오시는 길</h3></a>\r\n            </li>\r\n          </ul> */}\r\n          <p className=\"to_top\">\r\n            <a href=\"#layout0\" className=\"s_point\">TOP</a>\r\n          </p>\r\n        </div>\r\n\r\n      </footer>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport {compose} from 'recompose';\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n} from 'react-google-maps';\r\nconst MapWithAMarker = compose (withScriptjs, withGoogleMap) (props => {\r\n  //console.log ('props.markers: ----------- ' + props.markers);\r\n  return (\r\n    <GoogleMap\r\n      defaultZoom={16.3}\r\n      defaultCenter={{lat: props.markers[0].lat, lng: props.markers[0].lng}}\r\n      center={{\r\n        lat: props.markers[0].lat, //36.818434,\r\n        lng: props.markers[0].lng, //127.1527916,\r\n      }}\r\n    >\r\n      {props.markers.map (marker => {\r\n        //console.log (marker);//디버그\r\n        const onClick = props.onClick.bind (this, marker);\r\n        var icons_text = '정보없음';\r\n        var icons = '/design_publish/img/gray-dot.png';\r\n        switch (marker.remain_stat) {\r\n          case 'plenty':\r\n            icons_text = '100개이상';\r\n            icons = '/design_publish/img/green-dot.png';\r\n            break;\r\n          case 'some':\r\n            icons_text = '30개 이상 100개미만';\r\n            icons = '/design_publish/img/yellow-dot.png';\r\n            break;\r\n          case 'few':\r\n            icons_text = '2개 이상 30개 미만';\r\n            icons = '/design_publish/img/red-dot.png';\r\n            break;\r\n          case 'empty':\r\n            icons_text = '1개 이하';\r\n            icons = '/design_publish/img/gray-dot.png';\r\n            break;\r\n          case 'break':\r\n            icons_text = '판매중지';\r\n            icons = '/design_publish/img/gray-dot.png';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return (\r\n          <Marker\r\n            key={marker.code}\r\n            onClick={onClick}\r\n            position={{lat: marker.lat, lng: marker.lng}}\r\n            options={{icon: icons}}\r\n          >\r\n            {props.selectedMarker === marker &&\r\n              <InfoWindow>\r\n                <div>\r\n                  {'판매처: ' + marker.name}<br />\r\n                  {'재고상태: ' + icons_text}<br />\r\n                  {'주소: ' + marker.addr}<br />\r\n                  {'입고시간: ' + marker.stock_at}\r\n                </div>\r\n              </InfoWindow>}\r\n            }\r\n          </Marker>\r\n        );\r\n      })}\r\n    </GoogleMap>\r\n  );\r\n});\r\n\r\nexport default class ShelterMap extends Component {\r\n  constructor (props) {\r\n    super (props);\r\n    this.state = {\r\n      shelters: [],\r\n      selectedMarker: false,\r\n      mapFetchUrl: this.props.fetchUrldata,\r\n    };\r\n  }\r\n  componentDidUpdate (newProps, newState) {\r\n    //console.log (newState);\r\n    if (this.state.mapFetchUrl === this.props.fetchUrldata) {\r\n      console.log ('render()안에서 this는 Map.js콤포넌트 모듈 자신을 가리킨다.', this);\r\n      return false;\r\n    } else {\r\n      //alert (this.state.mapFetchUrl);\r\n      //alert ('Map: ' + this.props.fetchUrldata);\r\n      this.setState ({mapFetchUrl: this.props.fetchUrldata});\r\n      this.componentDidMount ();\r\n    }\r\n    console.log ('componentDidUpdate');\r\n  }\r\n  componentDidMount () {\r\n    var result = null;\r\n    result = fetch (this.props.fetchUrldata)\r\n      .then (r => r.json ())\r\n      .then (mapdata => {\r\n        this.setState ({shelters: mapdata.stores});\r\n      });\r\n    //console.log ('result: 누락되는 경우 대비 실행---------- ' + result);\r\n    if (result === null) {\r\n      fetch (this.props.fetchUrldata).then (r => r.json ()).then (data => {\r\n        this.setState ({shelters: data.stores});\r\n      });\r\n    }\r\n  }\r\n  handleClick = (marker, event) => {\r\n    // console.log({ marker })\r\n    this.setState ({selectedMarker: marker});\r\n  };\r\n  render () {\r\n    return (\r\n      <MapWithAMarker\r\n        selectedMarker={this.state.selectedMarker}\r\n        markers={this.state.shelters}\r\n        onClick={this.handleClick}\r\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\" //key=YOUR_API_KEY&\r\n        loadingElement={<div style={{height: '100%'}} />}\r\n        containerElement={<div style={{height: '400px'}} />}\r\n        mapElement={<div style={{height: '100%'}} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/* App.js */\nimport React, {Component} from 'react';\nimport Header from './components/Header';\nimport HeaderBanner from './components/HeaderBanner';\nimport SearchForm from './components/SearchForm';\nimport BoardList from './components/BoardList';\nimport BoardView from './components/BoardView';\nimport Footer from './components/Footer';\nimport Map from './components/Map';\nimport './App.css';\n//헤더 컴포넌트를 만드는 코드(src/components/HeaderBanner.js)\n\n//리스트제목 컴포넌트를 만드는 코드(src/components/BoardList.js)\n\n//리스트뷰 컴포넌트를 만드는 코드(src/components/BoardView.js)\n\n//메인 컴포넌트를 만드는 코드(아래)\nclass App extends Component {\n  //콤포넌트 생성자 : 콤포넌트 실행시 자동 실행(초기화)\n  constructor (props) {\n    //props(속성) 과 state(자료) 관계\n    super (props); //부모클래스-Component의 props속성을 사용하겠다고 선언, 이후 부터 this 키워드 사용가능\n    this.max_board_id = 2; //전역변수 BoardList의 최근 입력 Key값 초기화\n\n    //부모클래스 props속성의 state값 초기화\n    this.state = {\n      mode: 'list', //변수에 초기값 지정\n      selected_boardView_id: null, //선택한 게시물 번호 강제로 초기화 할때,\n      searchWord: '충청남도 천안시 동남구 신부동', //검색어 상태 입력예, 충청남도 천안시 동남구 신부동\n      fetchUrl: 'https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=36.818434&lng=127.1527916',\n      headerBanner: {\n        title: '이 사이트는 리액트기술 테스트용 입니다.',\n        sub: 'Google 지도를 제대로 로드할 수 없습니다.',\n      }, //json 1차원 데이터 객체\n      //배열 2차원 데이터(아래)\n      boardList: [],\n      /* boardList: [\n        {\n          addr: '충청남도 홍성군 갈산면 상촌로 12-1 (두류동)',\n          code: '1',\n          lat: 36.6029863,\n          lng: 126.5489114,\n          name: '신신약국',\n          type: '01',//판매처 유형[약국: '01', 우체국: '02', 농협: '03']\n          stock_at: '입고시간',\n          remain_stat: '재고 상태',\n          created_at: '데이터 생성 일자',\n          //[100개 이상(녹색): 'plenty' / 30개 이상 100개미만(노랑색): 'some' / 2개 이상 30개 미만(빨강색): 'few' / 1개 이하(회색): 'empty' / 판매중지: 'break']\"\n        },\n      ], */\n    };\n  }\n\n  //초기 공공데이터 json(텍스트로변환된) 내용 받아오기\n  componentDidMount (_searchWord) {\n    var boardList_storeInfos = null; //\n    var localfetchUrl = null;\n    var query = null;\n    //alert (encodeURIComponent (_searchWord));\n    if (_searchWord === undefined) {\n      /*localfetchUrl =\n      ('https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=36.818434&lng=127.1527916');*/\n      query = encodeURIComponent (this.state.searchWord);\n      localfetchUrl =\n        'https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByAddr/json?address=' +\n        query;\n    } else {\n      query = encodeURIComponent (_searchWord);\n      localfetchUrl =\n        'https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByAddr/json?address=' +\n        query;\n    }\n    this.setState ({fetchUrl: localfetchUrl});\n    fetch (localfetchUrl)\n      .then (response => response.text ())\n      .then (responseText => {\n        /* API사용하지 않고, 직접 Json데이터 사용시 */\n        //console.log ('res', responseText);//json(텍스트로변환된) 내용 확인\n        let jsonResult = JSON.parse (responseText); //json 형태의 데이터를 파싱\n        //console.log ('jsonResult', jsonResult);//json 파싱 확인\n        //boardList_storeInfos = jsonResult.storeInfos; //storeInfos 속성도 array 형태로 받아주고,-판매점정보만\n        boardList_storeInfos = jsonResult.stores; //storeInfos 속성도 array 형태로 받아주고,-판매점및 재고까지\n        if (boardList_storeInfos === null) {\n          return false;\n        }\n        /* boardList_storeInfos = [\n          {\n            addr: '충청남도 홍성군 갈산면 상촌로 12-1 (두류동)',\n            code: '1',\n            lat: 36.6029863,\n            lng: 126.5489114,\n            name: '신신약국',\n            type: '01',\n            stock_at: '입고시간',\n            remain_stat: '재고 상태',\n            created_at: '데이터 생성 일자',\n          },\n        ]; */\n        //alert (boardList_storeInfos); //디버그\n        /* API사용시 아래 기술 참조\n          const match = responseText.match (/\\((.*)\\)/); // 정규식은 JSONP응답에 따라 달라질 수 있음. 이 경우 ( 응답 )이고 match는 ( ) 를 포함한 전체 응답과 () 내부의 데이터가 배열 형태로 출력됨\n          if (match == null) console.log ('Message', 'null');\n          console.log ('1', match[0].toString ());\n          console.log ('2', match[1].toString ());\n          let jsonResult = JSON.parse (match[1].toString ()); // ( ) 를 뗀 진짜 json 형태의 데이터를 파싱하고\n          let jusoArray = jsonResult.results.juso; // juso 속성도 array 형태이기 때문에 또 받아주고,\n          console.log ('result', jsonResult.results.juso.toString ());\n          console.log ('juso', JSON.stringify (jsonResult)); //이건 확인용\n          console.log ('real data', jusoArray[0].detBdNmList); // juso 배열의 첫번째 데이터의 detBdNmList 속성 값을 출력해주었다. */\n      })\n      .then (data => this.setState ({boardList: boardList_storeInfos}))\n      .catch (error => {\n        console.error (error);\n      });\n  }\n  getBoardViewContent () {\n    var i = 0;\n    while (i < this.state.boardList.length) {\n      var data = this.state.boardList[i];\n      if (data.code === this.state.selected_boardView_id) {\n        return data;\n        //break;\n      }\n      i = i + 1;\n    }\n  }\n  getBoardView () {\n    var _article = null, _content = null;\n    if (this.state.mode === 'list') {\n      _article = null;\n      //this.state.selected_boardView_id = 0;\n    } else if (this.state.mode === 'read') {\n      _content = this.getBoardViewContent ();\n      _article = (\n        <BoardView\n          name={_content.name}\n          addr={_content.addr}\n          code={_content.code}\n          lat={_content.lat}\n          lng={_content.lng}\n          type={_content.type}\n          stock_at={_content.stock_at}\n          remain_stat={_content.remain_stat}\n          created_at={_content.created_at}\n          onClosePage={function () {\n            this.componentDidMount ();\n            this.setState ({mode: 'list', selected_boardView_id: null});\n          }.bind (this)}\n        />\n      );\n    }\n    return _article;\n  }\n  //props-state의 값이 바뀌면 html을 그리는 함수 render 자동으로 재 실행됨\n  render () {\n    console.clear ();\n    console.log ('render()안에서 this는 App.js콤포넌트 모듈 자신을 가리킨다.', this);\n\n    //constructor (props) 부모클래스의 초기화한 값을 아래 태그의 속성(props)에 this값으로 전달\n    return (\n      <div className=\"App\">\n        <Header />\n        <div id=\"container\">\n          <HeaderBanner\n            title={this.state.headerBanner.title}\n            sub={this.state.headerBanner.sub}\n            onChangePage={function () {\n              //alert ('HeaderBanner');//디버그\n              this.componentDidMount ();\n              this.setState ({mode: 'list', selected_boardView_id: null});\n            }.bind (this)}\n          />\n          {/* <!-- bodytext_area --> */}\n          <div className=\"bodytext_area box_inner\">\n            <SearchForm\n              searchWord={this.state.searchWord}\n              onSubmit={function (_searchWord) {\n                //검색된 BoradList 내용 출력\n                console.log ('_searchWord', _searchWord); //디버그\n                if (_searchWord === '') {\n                  this.componentDidMount ();\n                } else {\n                  this.componentDidMount (_searchWord);\n                }\n                this.setState ({mode: 'list'});\n                //화면 리프레시가 않됨-관련함수:shouldComponentUpdate.\n              }.bind (this)}\n            />\n            <Map fetchUrldata={this.state.fetchUrl} />\n            {this.getBoardView ()}\n            <BoardList\n              onChangePage={function (code) {\n                //alert ('BoardList');//디버그\n                //debugger;크롬 디버거연동\n                this.setState ({\n                  mode: 'read',\n                  selected_boardView_id: code,\n                });\n              }.bind (this)}\n              data={this.state.boardList}\n            />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* index.js */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (<App />, document.getElementById ('wrap'));\n\n// 앱이 오프라인에서 작동하고 더 빨리로드되도록하려면\n// 아래의 unregister()를 register()로 변경 합니다.\nserviceWorker.unregister ();\n"],"sourceRoot":""}